@page "/Dx/dataGrid"

@using taedisoft.BlazorServer.Models
@using taedisoft.BlazorServer.Services
@inject WeatherForecastService ForecastService


<DxDataGrid DataAsync="@ForecastService.GetForecastAsync"
            PageSize="5"
            RowRemovingAsync="@OnRowRemoving"
            RowUpdatingAsync="@OnRowUpdating"
            RowInsertingAsync="@OnRowInserting"
            InitNewRow="@OnInitNewRow">
    <DxDataGridCommandColumn Width="100px"></DxDataGridCommandColumn>
    <DxDataGridDateEditColumn Field="@nameof(WeatherForecastModel.Date)" DisplayFormat="D" EditorFormat="d" EditorDisplayFormat="D" />
    <DxDataGridColumn Field="@nameof(WeatherForecastModel.Forecast)" Caption="Forecast" />
    <DxDataGridSpinEditColumn Field="@nameof(WeatherForecastModel.TemperatureC)" Caption="@("Temp. (\x2103)")" TextAlignment="DataGridTextAlign.Left" />
    <DxDataGridComboBoxColumn Field="@nameof(WeatherForecastModel.CloudCover)" Caption="Cloud Cover" DataAsync="@ForecastService.GetCloudCoverAsync" TextAlignment="DataGridTextAlign.Left" />
    <DxDataGridCheckBoxColumn Field="@nameof(WeatherForecastModel.Precipitation)" Caption="Precipitation" Width="120px" />*
</DxDataGrid>

@code {
    async Task OnRowRemoving(WeatherForecastModel dataItem) {
        await ForecastService.Remove(dataItem);
    }
    async Task OnRowUpdating(WeatherForecastModel dataItem, IDictionary<string, object> newValue) {
        await ForecastService.Update(dataItem, newValue);
    }
    async Task OnRowInserting(IDictionary<string, object> newValue) {
        await ForecastService.Insert(newValue);
    }
    Task OnInitNewRow(Dictionary<string, object> values) {
        values.Add("Date", DateTime.Now);
        values.Add("TemperatureC", 13);
        values.Add("Forecast", "Warm");
        values.Add("CloudCover", "Sunny");
        return Task.CompletedTask;
    }
}